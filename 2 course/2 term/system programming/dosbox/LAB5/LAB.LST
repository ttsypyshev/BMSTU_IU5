Turbo Assembler	 Version 3.1	    05/07/24 23:09:39	    Page 1
lab.asm



      1				     ;Лабораторная работа №5
      2				     ;Цыпышев Т.А. ИУ5-41 Вар. 20
      3				     ;===============================================================================
      4
      5	0000			     PRGR SEGMENT
      6							  ASSUME CS:PRGR, DS:DATA
      7
      8	0000				     BEGIN:
      9	0000  B8 0000s					  MOV	 AX, DATA	     ; Инициализация сегмента  +
     10				     данных
     11	0003  8E D8					  MOV	 DS, AX
     12	0005  E8 0066					  CALL	 INFO		     ; Вызов процедуры INFO для    +
     13				     вывода приветствия
     14
     15	0008				     INIT:
     16	0008  B9 0014					  MOV	 CX, 20		     ; Установка счетчика	    +
     17				     символов в 20
     18	000B  BE 0003					  MOV	 SI, 3		     ; Установка индекса	    +
     19				     начала строки в 3
     20	000E  BB 0000r					  MOV	 BX, OFFSET hextb    ; Загрузка	таблицы		    +
     21				     шестнадцатеричных	символов
     22
     23	0011				     INPUT:
     24	0011  E8 008D					  CALL	 GETCH		     ; Получение символа
     25	0014  3C 24					  CMP	 AL, '$'	     ; Проверка	на конец	строки
     26	0016  74 0C					  JE	 END_LINE
     27	0018  3C 2A					  CMP	 AL, '*'	     ; Проверка	на символ	    +
     28				     завершения ввода
     29	001A  74 30					  JE	 EXIT_PROGRAM
     30	001C  E8 009A					  CALL	 HEX		     ; Преобразование символа  +
     31				     в	шестнадцатеричное представление
     32	001F  49					  DEC	 CX		     ; Уменьшение счетчика	    +
     33				     символов
     34	0020  74 02					  JZ	 END_LINE	     ; Если	счетчик стал	равен  +
     35				     нулю, завершаем ввод
     36	0022  EB ED					  JMP	 INPUT		     ; Повторяем ввод
     37
     38	0024				     END_LINE:
     39	0024  53					  PUSH	 BX		     ; Сохранение регистров
     40	0025  51					  PUSH	 CX
     41	0026  BB 0001					  MOV	 BX, 1		     ; Установка начального	    +
     42				     индекса для вывода	строки
     43	0029  4E					  DEC	 SI		     ; Уменьшение индекса	    +
     44				     строки до последнего символа
     45	002A  8B CE					  MOV	 CX, SI		     ; Установка счетчика на	    +
     46				     количество введенных символов
     47	002C  B4 40					  MOV	 AH, 40h	     ; Услуга для вывода	строки
     48	002E  BA 0010r					  MOV	 DX, OFFSET line
     49	0031  CD 21					  INT	 21h
     50	0033  B9 0014					  MOV	 CX, 20		     ; Восстановление счетчика+
     51				     символов
     52	0036  BE 0003					  MOV	 SI, 3		     ; Восстановление индекса  +
     53				     строки
     54
     55	0039				     CLEAR:
     56	0039  C6 84 0010r 20 90				  MOV	 line[SI], 32	     ; Очистка символов в	    +
     57				     строке
Turbo Assembler	 Version 3.1	    05/07/24 23:09:39	    Page 2
lab.asm



     58	003F  46					  INC	 SI
     59	0040  E2 F7					  LOOP	 CLEAR
     60	0042  59					  POP	 CX		     ; Восстановление		    +
     61				     регистров
     62	0043  5B					  POP	 BX
     63	0044  B9 0004					  MOV	 CX, 4
     64	0047  E8 005C					  CALL	 CLRF		     ; Очистка экрана
     65	004A  E2 BC					  LOOP	 INIT		     ; Повторное начало ввода
     66
     67	004C				     EXIT_PROGRAM:
     68	004C  E8 0057					  CALL	 CLRF		     ; Очистка экрана
     69	004F  E8 0054					  CALL	 CLRF		     ; Очистка экрана
     70	0052  B4 09					  MOV	 AH, 09h	     ; Вывод сообщения о		    +
     71				     завершении программы
     72	0054  BA 00CFr					  LEA	 DX, msg_input_name
     73	0057  CD 21					  INT	 21h
     74	0059  E8 004A					  CALL	 CLRF		     ; Очистка экрана
     75	005C  BA 004Cr					  MOV	 DX, OFFSET msg
     76	005F  CD 21					  INT	 21h
     77	0061  E8 003D					  CALL	 GETCH		     ; Ожидание	нажатия любой   +
     78				     клавиши
     79	0064  B8 0002					  MOV	 AX, 02h	     ; Выход из программы
     80	0067  CD 10					  INT	 10h
     81	0069  B8 4C00					  MOV	 AX, 4C00h
     82	006C  CD 21					  INT	 21h
     83
     84	006E			     INFO PROC
     85	006E  B8 0002					  MOV	 AX, 02h	     ; Установка видеорежима
     86	0071  CD 10					  INT	 10h
     87	0073  B4 09					  MOV	 AH, 09h	     ; Вывод приветствия
     88	0075  BA 0066r					  MOV	 DX, OFFSET greet
     89	0078  CD 21					  INT	 21h
     90	007A  E8 0029					  CALL	 CLRF		     ; Очистка экрана
     91	007D  B4 09					  MOV	 AH, 09h	     ; Вывод информации о	    +
     92				     программе
     93	007F  BA 008Ar					  MOV	 DX, OFFSET defl
     94	0082  CD 21					  INT	 21h
     95	0084  E8 001F					  CALL	 CLRF		     ; Очистка экрана
     96	0087  B4 02					  MOV	 AH, 02h	     ; Установка курсора в	    +
     97				     позицию
     98	0089  B2 24					  MOV	 DL, 36
     99	008B  CD 21					  INT	 21h
    100	008D  B4 09					  MOV	 AH, 09h	     ; Вывод дополнительной	    +
    101				     информации
    102	008F  BA 00ADr					  MOV	 DX, OFFSET info1
    103	0092  CD 21					  INT	 21h
    104	0094  E8 000F					  CALL	 CLRF		     ; Очистка экрана
    105	0097  B4 09					  MOV	 AH, 09h
    106	0099  BA 00BEr					  MOV	 DX, OFFSET info2
    107	009C  CD 21					  INT	 21h
    108	009E  E8 0005					  CALL	 CLRF		     ; Очистка экрана
    109	00A1			     INFO ENDP
    110
    111	00A1			     GETCH PROC
    112	00A1  B4 01					  MOV	 AH, 01h	     ; Получение символа
    113	00A3  CD 21					  INT	 21h
    114	00A5  C3					  RET
Turbo Assembler	 Version 3.1	    05/07/24 23:09:39	    Page 3
lab.asm



    115	00A6			     GETCH ENDP
    116
    117	00A6			     CLRF PROC
    118	00A6  B4 02					  MOV	 AH, 02h	     ; Вывод символов перевода +
    119				     строки
    120	00A8  B2 0A					  MOV	 DL, 10
    121	00AA  CD 21					  INT	 21h
    122	00AC  B4 02					  MOV	 AH, 02h
    123	00AE  B2 0D					  MOV	 DL, 13
    124	00B0  CD 21					  INT	 21h
    125	00B2  C3					  RET
    126	00B3			     CLRF ENDP
    127
    128	00B3			     CLRSCR PROC
    129	00B3  B8 0002					  MOV	 AX, 02H	     ; Очистка экрана
    130	00B6  CD 10					  INT	 10H
    131	00B8  C3					  RET
    132	00B9			     CLRSCR ENDP
    133
    134	00B9			     HEX PROC
    135	00B9  50					  PUSH	 AX		     ; Сохранение регистра AX
    136	00BA  D0 E8 D0 E8 D0 E8	D0+			  SHR	 AL, 4		     ; Сдвиг вправо на 4 бит
    137	      E8
    138	00C2  D7					  XLAT			     ; Перевод символа в		    +
    139				     шестнадцатеричный	эквивалент
    140	00C3  88 84 0010r				  MOV	 line[SI], AL	     ; Сохранение первой	    +
    141				     половины шестнадцатеричного представления
    142	00C7  46					  INC	 SI		     ; Увеличение индекса	    +
    143				     текущего символа
    144	00C8  58					  POP	 AX		     ; Восстановление регистра+
    145				     AX
    146	00C9  24 0F					  AND	 AL, 00001111b	     ; Очистка старших битов
    147	00CB  D7					  XLAT			     ; Перевод символа в		    +
    148				     шестнадцатеричный	эквивалент
    149	00CC  88 84 0010r				  MOV	 line[SI], AL	     ; Сохранение второй	    +
    150				     половины шестнадцатеричного представления
    151	00D0  46					  INC	 SI		     ; Увеличение индекса	    +
    152				     текущего символа
    153	00D1  B0 20					  MOV	 AL, 32		     ; Установка пробела в	    +
    154				     строку
    155	00D3  88 84 0010r				  MOV	 line[SI], AL	     ; Сохранение пробела
    156	00D7  46					  INC	 SI		     ; Увеличение индекса	    +
    157				     текущего символа
    158	00D8  C3					  RET
    159	00D9			     HEX ENDP
    160
    161	00D9			     PRGR ENDS
    162
    163	0000			     DATA SEGMENT
    164	0000  30 31 32 33 34 35	36+	     hextb	    DB '0123456789ABCDEF'			     ; Таблица	    +
    165	      37 38 39 41 42 43	44+  шестнадцатеричных	символов
    166	      45 46
    167	0010  14*(20 3D	20)		     line	    DB 20 DUP (' = ')				     ; Буфер для    +
    168				     хранения строки
    169	004C  50 72 65 73 73 20	61+	     msg	    DB 'Press any key to exit... $'		     ; Сообщение о+
    170	      6E 79 20 6B 65 79	20+  выходе
    171	      74 6F 20 65 78 69	74+
Turbo Assembler	 Version 3.1	    05/07/24 23:09:39	    Page 4
lab.asm



    172	      2E 2E 2E 20 24
    173	0066  54 79 70 65 20 61	6E+	     greet	    DB 'Type any chars,	maximum	length - 20$'	     ; Приветствие
    174	      79 20 63 68 61 72	73+
    175	      2C 20 6D 61 78 69	6D+
    176	      75 6D 20 6C 65 6E	67+
    177	      74 68 20 2D 20 32	30+
    178	      24
    179	008A  2D 2D 2D 2D 2D 2D	2D+	     defl	    DB '----------------------------------$'	     ; Разделитель
    180	      2D 2D 2D 2D 2D 2D	2D+
    181	      2D 2D 2D 2D 2D 2D	2D+
    182	      2D 2D 2D 2D 2D 2D	2D+
    183	      2D 2D 2D 2D 2D 2D	24
    184	00AD  20 2D 20 65 6E 64	20+	     info1	    DB ' - end of string$'			     ; Информация +
    185	      6F 66 20 73 74 72	69+  о	конце строки
    186	      6E 67 24
    187	00BE  2A 20 2D 20 65 6E	64+	     info2	    DB '* - end	of input$'			     ; Информация +
    188	      20 6F 66 20 69 6E	70+  о	конце ввода
    189	      75 74 24
    190	00CF  54 53 59 50 59 53	48+	     msg_input_name DB 'TSYPYSHEV T.A. UI5-41 Var-20$'		     ; Имя автора  +
    191	      45 56 20 54 2E 41	2E+  и	номер варианта
    192	      20 55 49 35 2D 34	31+
    193	      20 56 61 72 2D 32	30+
    194	      24
    195	00EC			     DATA ENDS
    196
    197	0000			     STK SEGMENT STACK
    198	0000  0100*(00)				 DB 256	DUP (0)	     ; Стек
    199	0100			     STK ENDS
    200
    201				     END BEGIN
Turbo Assembler	 Version 3.1	    05/07/24 23:09:39	    Page 5
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "05/07/24"
??FILENAME		Text   "lab	"
??TIME			Text   "23:09:39"
??VERSION		Number 030A
@CPU			Text   0101H
@CURSEG			Text   STK			   #5  #163  #197
@FILENAME		Text   LAB
@WORDSIZE		Text   2			   #5  #163  #197
BEGIN			Near   PRGR:0000		   #8  201
CLEAR			Near   PRGR:0039		   #55	59
CLRF			Near   PRGR:00A6		   64  68  69  74  90  95  104	108  #117
CLRSCR			Near   PRGR:00B3		   #128
DEFL			Byte   DATA:008A		   93  #179
END_LINE		Near   PRGR:0024		   26  34  #38
EXIT_PROGRAM		Near   PRGR:004C		   29  #67
GETCH			Near   PRGR:00A1		   24  77  #111
GREET			Byte   DATA:0066		   88  #173
HEX			Near   PRGR:00B9		   30  #134
HEXTB			Byte   DATA:0000		   20  #164
INFO			Near   PRGR:006E		   12  #84
INFO1			Byte   DATA:00AD		   102	#184
INFO2			Byte   DATA:00BE		   106	#187
INIT			Near   PRGR:0008		   #15	65
INPUT			Near   PRGR:0011		   #23	36
LINE			Byte   DATA:0010		   48  56  140	149  155  #167
MSG			Byte   DATA:004C		   75  #169
MSG_INPUT_NAME		Byte   DATA:00CF		   72  #190

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

DATA			16  00EC Para	none		   6  9	 #163
PRGR			16  00D9 Para	none		   #5  6
STK			16  0100 Para	Stack		   #197
